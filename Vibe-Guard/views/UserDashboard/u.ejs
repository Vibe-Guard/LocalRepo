<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home Page</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="homecss.css" />
    <link rel="stylesheet" href="theme.css" />
    <link rel="stylesheet" href="style.css" />
    <link rel="stylesheet" href="animations.css" />
    <link rel="stylesheet" href="userstoriescss.css" />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.theme.default.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.min.js"></script>
    <script src="/script.js"></script>
  </head>
   <style>

    
    body {
      background-color: #041d35;
      color: white;
    }
    .like-btn{
            background-color: #041D35;

    }
  
                #myInput::placeholder {
                  color: rgb(231, 230, 229);
                  opacity: 1;
                }

                /* Focus hone par bhi koi border-color change ya outline na aaye */
                #myInput:focus {
                  outline: none;
                  box-shadow: none;
                  border-bottom-color: rgb(
                    231,
                    230,
                    229
                  ); /* bottom border same rahe */
                }
         
    /* navbar.css */

    .navbar {
      background-color: #041D35;
      padding: 10px 20px;
    }
    

    .navbar-brand {
      font-weight: bold;
      font-size: 24px;
      color: white;
    }

    .navbar-brand .vibeGuard {
      color: #3399ff;
      font-size: 30px;
    }

    .navbar-toggler {
      border-color: white;
    }

    .navbar-toggler-icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='white' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
    }

    .navbar-nav .nav-link {
      color: #ffffff !important;
      font-weight: 500;
      padding: 8px 15px;
      transition: background-color 0.3s, color 0.3s;
    }

    .navbar-nav .nav-link:hover {
      color: #3399ff !important;
      background-color: rgba(255, 255, 255, 0.05);
      border-radius: 8px;
    }

    .navbar-nav .nav-link.active {
      color: #3399ff !important;
      font-weight: bold;
    }

    .sidebar {
      background-color: #082541;
      min-height: 100vh;
      padding: 1rem;
      border-right: 1px solid #333;
    }
    .sidebar a {
      color: #ddd;
      display: block;
      margin: 0.5rem 0;
      text-decoration: none;
    }
    .sidebar a:hover {
      color: white;
    }
    .navbar-dark .navbar-nav .nav-link {
      color: #fff;
    }
    .post-card {
      background-color: #082541;
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    .profile-img {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 10px;
    }
   .like-btn {
  background: none;
  border: none;
  cursor: pointer;
  margin-right: 97px;
  font-size: 20px; /* increased size */
  color: #ffffff;  /* hollow color */
  display: flex;
  align-items: flex-start;
  gap: 8px;
  padding: 0;
  user-select: none;
}


.like-btn.liked {
  color: red;
}

.like-btn  {
  font-size: 15px;  /* slightly bigger */
  transition: color 0.3s ease;
  user-select: none;
}


.like-icon, .comment-icon {
  width: 24px;           /* Fixed width */
  height: 24px;          /* Fixed height */
  font-size: 30px;
  text-align: center;
  line-height: 14px;     /* Vertically center */
  vertical-align: middle;
  margin-right: 5px;

}
.star-rating {
  display: flex;
  flex-direction: row; /* ‚≠ê Stars left to right */
}

.star-icon {
  font-size: 24px;
  cursor: pointer;
  color: lightgray;
  transition: color 0.2s ease;
}

/* ‚≠ê Already rated stars */
.star-icon.filled {
  color: gold;
}

/* üö´ No hover effect anymore */


/* Default tab style */
.custom-tab-button {
  background-color: #041d35;
  color: white;
  border: none;
  border-bottom: 2px solid transparent;
  border-radius: 0;
}

/* Active tab style */
.custom-tab-button.active {
  background-color: #ffffff;
  color: #041d35;
  border: none;
  border-bottom: 3px solid #041d35;
  border-radius: 0;
}


  .btn-post {
   width: 100%;
        
   }
 .modal-title{
        background-color:#041d35 ;
 }

 .nav-link{
       background-color: #041d35;
      color: white;
      border: #041d35;
      border: transparent;
 }
.card-header{
  background-color: #041D35;
}
  .custom-modal-bg {
    background-color: #041d35;
    color: white;
  }

  .custom-modal-bg .form-label {
    color: #ffffff;
  }

  .custom-modal-bg input,
  .custom-modal-bg textarea {
    background-color: #041d35;
    color: white;
    border: 1px solid #ffffff;
  }

  .custom-modal-bg input::placeholder,
  .custom-modal-bg textarea::placeholder {
    color: #aab8c2;
  }

  .custom-modal-bg .btn-close {
    filter: invert(1);
  }

  /* Post Button */
  .custom-post-btn {
    background-color: #ffffff;
    color: #041d35;
    font-weight: 600;
  }

  .custom-post-btn:hover {
    background-color: #e0e0e0;
    color: #041d35;
  }

  .comments-list * {
    color: white !important;
  }
     
  
  @media (max-width: 1024px) {
          .navbar-nav {
    width: auto;

  }

  .navbar-nav .nav-item {
    margin: 0 5px;
  }
        .row {
          display: flex;
          flex-wrap: nowrap;
          gap: 15px;
        }

        .col-md-2.sidebar {
          flex: 0 0 20%;
          max-width: 20%;
          display: block;
        }

        .col-md-7 {
          flex: 0 0 60%;
          max-width: 60%;
        }

        .col-md-3 {
          flex: 0 0 20%;
          max-width: 20%;
          margin-top: 0;
        }

        #myInput,
        .btn-post {
          width: 100% !important;
        }
      }
      @media (max-width: 425px) {
                .navbar-nav {
      width: auto;

       }

     .navbar-nav .nav-item {
     margin: 0 5px;
     }

        .col-md-2.sidebar {
          display: none;
        }

        .row {
          display: flex;
          flex-direction: column; /* Stack items vertically */
        }

        .col-md-7,
        .col-md-3 {
          flex: none !important;
          max-width: 100% !important;
          width: 100% !important;
        }

        .col-md-3 {
          order: 2; /* Move ads to bottom */
          margin-top: 20px;
        }

        .col-md-7 {
          order: 1; /* Post section stays on top */
        }

        #myInput,
        .btn-post {
          width: 100% !important;
        }
      }
      

      /* 425px ‚Äî Hide sidebar, Ad below */
      @media (max-width: 425px) {
        .col-md-2.sidebar {
          display: none;
        }

        .col-md-3 {
          flex: 0 0 100% !important;
          max-width: 100% !important;
          margin-top: 20px;
        }

        .col-md-7 {
          flex: 0 0 100% !important;
          max-width: 100% !important;
        }

        .row {
          flex-wrap: wrap;
        }

        #myInput,
        .btn-post {
          width: 100% !important;
        }
      }

      /* 375px and 320px ‚Äî Sidebar in toggle, Ad below */
      @media (max-width: 375px), (max-width: 320px) {
        .col-md-2.sidebar {
          display: none;
        }

        .col-md-3 {
          flex: 0 0 100% !important;
          max-width: 100% !important;
          margin-top: 20px;
        }

        .col-md-7 {
          flex: 0 0 100% !important;
          max-width: 100% !important;
        }

        .row {
          flex-wrap: wrap;
        }

        /* Sidebar Toggle Button Styles */
        #sidebarToggle {
          display: block;
          background-color: #3399ff;
          color: white;
          padding: 8px 12px;
          border: none;
          border-radius: 5px;
          margin: 10px;
        }

        .sidebar-collapsed {
          display: block !important;
          position: absolute;
          top: 60px;
          left: 10px;
          background-color: #041d35;
          padding: 10px;
          border-radius: 8px;
          z-index: 1000;
        }
      }
    </style>
  <style>
     .sidebar h5 {
        margin-top: 0;
    }

    .user-info p {
        margin: 0 0 10px;
    }

    .user-info p strong {
        font-weight: bold;
    }

    .outer-img-div {
        width: 250px;
        height: 250px;
        border: 6px solid #00284D;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-left: 19px;
    }

    #userImage {
        border-radius: 50%;
        width: 220px;
        height: 220px;
        object-fit: cover;
    }

    .user-info {
        margin-top: 20px;
    }

    .user-info-p {
        color: white;
        font-size: 18px;
    }

    .user-info-p i {
        margin-right: 10px;
    }

    @media (max-width: 1430px) {
        #sidebar {
            min-height: 100vh;
        }
    }

    #sidebar {
    min-width: 200px;
    max-width: 350px;
    background: #05152A;
    color: white;
    height: 100vh; /* Changed from min-height */
    position: fixed;
    top: 0;
    left: 0;
    overflow-y: auto; /* Enable vertical scroll */
    z-index: 999;
    display: flex;
    flex-direction: column;
    align-items: center;
}


    #sidebar .sidebar-header {
        width: 350px;
        padding: 20px;
        background: #05152A;
        text-align: center;
        font-size: 1.2em;
        font-weight: bold;
    }

    #sidebar ul.components {
        border-top: 1px solid #063560;
        margin-top: 20px;
        border-bottom: 1px solid #063560;
        width: 300px;
        padding: 10px 0;
    }

    #sidebar ul li a {
        text-decoration: none;
        padding: 10px;
        font-size: 1.1em;
        display: block;
        color: white;
    }

    #sidebar ul i {
        margin-right: 10px;
        margin-left: 10px;
    }

    #sidebar ul li a:hover {
        color: white;
        background: #063560;
    }

    #sidebar ul li.active > a {
        background: #041D35;
        color: white;
    }

    #sidebar ul li ul a {
        font-size: 0.9em !important;
        padding-left: 30px !important;
        background-color: #063560;
    }

    #sidebar ul li ul a:hover {
        border-top: 2px solid #0788FF;
        border-bottom: 2px solid #0788FF;
        background-color: #041D35;
        color: white;
    }
  </style>

  <body>
   
    <!-- Navbar Section -->

    <!-- Page layout -->
    <div class="container-fluid">
      <div class="row">
        <!-- Sidebar -->
         <nav id="sidebar">
    <div class="sidebar-header">
        <h3>Profile</h3>
    </div>

    <div class="user-info">
        <div class="outer-img-div">
            <img id="userImage" src="" alt="User Image" class="img-fluid">
        </div>
        <p class="user-info-p"><i class="fas fa-user"></i> <strong>Name:</strong> <span id="firstName">Loading...</span></p>
        <p class="user-info-p"><i class="fas fa-calendar-alt"></i> <strong>Age:</strong> <span id="age">Loading...</span></p>
        <p class="user-info-p"><i class="fas fa-genderless"></i> <strong>Gender:</strong> <span id="gender">Loading...</span></p>
    </div>

    <ul class="list-unstyled components">
        <li class="active">
            <a href="#settingsSubmenu" data-bs-toggle="collapse" aria-expanded="false" class="dropdown-toggle">
                <i class="fas fa-cogs"></i> Settings
            </a>
            <ul class="collapse list-unstyled" id="settingsSubmenu">
               <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
                <li><a href="/symptomschecker/read"><i class="fas fa-stethoscope"></i> Symptom Checker</a></li>
                <li><a href="/tracking/dashboard"><i class="fas fa-columns"></i>User Dashboard</a></li>
                <li><a href="/login/profile"><i class="fas fa-user"></i> Profile</a></li>
                <li><a href="/feedback/feedback"><i class="fas fa-comments"></i> Feedback</a></li>
                <li><a href="/login/logout"><i class="fas fa-sign-out-alt"></i> Log¬†Out</a></li>
            </ul>
        </li>
    </ul>
  </nav>

  <!-- Main Content -->
<div class="col-md-7 p-3" style="margin-left: 30%;">
  <!-- Ask Box -->
  <div class="mb-3" style= "background-color: #041d35;padding: 0.5rem 1rem;border-radius: 1rem;box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);width: 40%;margin-left: 80%;text-align: center;">
    <!-- Profile + Input Row -->
    <div class="d-flex align-items-center mb-2 w-100">
      <!-- Clickable Profile Picture -->
      <a href="/images/default-final.jpg" title="View Profile">
        <img
          src="/images/default-final.jpg"
          alt="Profile"
          class="rounded-circle me-2"
          style="width: 36px; height: 36px; object-fit: cover; cursor: pointer;"
        />
      </a>

      <!-- Clickable Input -->
      <input
        type="text"
        placeholder="What do you want to ask or share?"
        style="color: #ffffff; border: none; border-bottom: 2px solid rgb(231, 230, 229); background-color: #041d35; width: 830px; outline: none;"
        id="myInput"
      />
    </div>

    <!-- Post Button -->
    <button
      class="btn btn-post text-white fw-semibold border-white px-4 py-1 mt-2 rounded-pill"
      onclick="new bootstrap.Modal(document.getElementById('addPostModal')).show();"
      onmouseover="this.style.opacity='0.9'"
      onmouseout="this.style.opacity='1'"
      data-bs-toggle="modal"
      data-bs-target="#addPostModal"
    >
      Post
    </button>
  </div>

  <!-- Posts -->
  <% if (posts && posts.length > 0) { %>
    <% posts.forEach(post => { %>
      <div class="post-container shadow-sm mt-4" style="background-color: #041D35; border-radius: 12px; padding: 16px; margin-top: -15% !important;">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <div class="author-info">
            <!-- Clickable Profile Picture -->
            <a href="/profile" title="View Profile">
              <img
                src="/images/default-final.jpg"
                alt="Profile"
                class="rounded-circle me-2"
                style="width: 36px; height: 36px; object-fit: cover; cursor: pointer;"
              />
            </a>
            <span class="author-name">Anonymous</span>
            <br>
            <span class="post-time" style="color: #aaa; font-size: 13px;">
              <%= post.createdAt.toLocaleDateString() %>
            </span>
          </div>
        </div>

        <p class="post-content" style="color: #f1f1f1; font-size: 15px; margin-bottom: 10px; width: 400px;">
          <%= post.content %>
        </p>

        <% if (currentUser && currentUser.role === 'admin') { %>
          <div class="admin-controls mt-2">
            <!-- Delete Button -->
            <button
              class="btn btn-danger btn-sm me-2"
              onclick="confirmDelete('<%= post._id %>')"
            >
              Delete
            </button>

            <!-- Report Button -->
            <button
              class="btn btn-warning btn-sm"
              onclick="openReportModal('<%= post._id %>', this)"
            >
              Report
            </button>
          </div>
        <% } %>

        <% if (post.imageUrl) { %>
          <div class="post-image mb-2" style="width: 400px; height: 400px; overflow: hidden; border-radius: 10px;">
            <img
              src="<%= post.imageUrl %>"
              alt="Post Image"
              style="width: 100%; height: 100%; object-fit: cover; display: block;"
            />
          </div>
        <% } %>

        <div class="post-footer" style="width: 400px; margin: 0 auto; margin-left: 0%; margin-bottom: 20%;">
          <div class="d-flex justify-content-between" style="width: 100%;">
            <!-- Like Button -->
            <button
              class="like-btn"
              data-post-id="<%= post._id %>"
              data-likes='<%= JSON.stringify(post.likes || []) %>'
              data-current-user-id="<%= currentUser._id %>"
            >
              <span class="like-icon mt-2">‚ô°</span>
              <span class="like-count mt-1"><%= (post.likes && Array.isArray(post.likes)) ? post.likes.length : 0 %></span>
            </button>

            <!-- Comment Toggle Button -->
            <button
              class="comment-toggle-btn"
              data-post-id="<%= post._id %>"
              style="background: none; border: none; color: white; font-weight: 600; font-size: 14px; display: flex; align-items: center; cursor: pointer;"
            >
              <i class="fas fa-comment" style="margin-right: 6px;"></i> Add a comment
            </button>
          </div>

          <!-- Comment Section -->
          <div class="comment-section" style="display: none; margin-top: 20px; border-top: 1px solid #e0e0e0; padding-top: 20px;">
            <!-- Comment Input -->
            <div class="comment-input-area" style="display: flex; align-items: flex-start; gap: 12px; margin-bottom: 20px;">
              <img
                src="/images/default-final.jpg"
                alt="User Avatar"
                style="width: 40px; height: 40px; border-radius: 50%;"
              />
              <div style="flex: 1;">
                <input
                  type="text"
                  class="comment-input form-control"
                  placeholder="Write a comment..."
                  style="width: 100%; padding: 10px 14px; border-radius: 20px; border: 1px solid #ccc; background: #f0f2f5; font-size: 14px;"
                />
              </div>
              <button
                class="comment-submit-btn"
                style="padding: 8px 16px; border-radius: 20px; background-color: #041d35; color: white; font-weight: 600; border: none; outline: 2px solid white; outline-offset: 2px; transition: background 0.3s, outline 0.3s;"
              >
                Post
              </button>

              <!-- Cancel Button -->
              <button
                class="comment-cancel-btn"
                style="padding: 8px 16px; border-radius: 20px; background-color: #888; color: white; font-weight: 600; border: none; margin-left: 8px; cursor: pointer; display: none;"
              >
                Cancel
              </button>
            </div>

            <!-- Comments List -->
            <div class="comments-list" style="display: flex; flex-direction: column; gap: 16px;">
              <% if (post.comments && Array.isArray(post.comments) && post.comments.length > 0) { %>
                <% post.comments.forEach(comment => { %>
                  <div class="comment-item" style="display: flex; align-items: flex-start; gap: 12px;">
                    <img
                      src="/images/default-final.jpg"
                      alt="User Avatar"
                      style="width: 36px; height: 36px; border-radius: 50%;"
                    />
                    <div style="background-color: #041d35; padding: 10px 15px; border-radius: 12px; flex: 1;">
                      <div style="font-weight: 600; margin-bottom: 4px;">
                        <%= comment.user ? comment.user.username : 'Unknown User' %>
                      </div>
                      <div style="color: #333;"><%= comment.text %></div>
                    </div>
                  </div>
                <% }); %>
              <% } else { %>
                <div style="color: #888; font-size: 14px;">No comments yet.</div>
              <% } %>
            </div>
          </div>

          <div class="post-rating" data-post-id="<%= post._id %>" style="margin-top: 10px;">
            <div class="star-rating">
              <% for(let i = 1; i <= 5; i++) { %>
                <i
                  class="fa fa-star star-icon <%= (post.averageRating >= i) ? 'filled' : '' %>"
                  data-value="<%= i %>"
                ></i>
              <% } %>
            </div>

            <span style="margin-left: 8px; color: #ccc; font-size: 14px;">
              (<%= post.averageRating ? post.averageRating.toFixed(1) : '0.0' %>)
            </span>
          </div>
        </div>
      </div>
    <% }) %>
  <% } else { %>
    <p style="color: white; margin-top: 20px;">No posts available.</p>
  <% } %>
</div>

        

<!-- Add Post Modal -->
<div class="modal fade" id="addPostModal" tabindex="-1" aria-labelledby="addPostModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content custom-modal-bg">
      <div class="modal-header border-0">
        <h5 class="modal-title " id="addPostModalLabel">Create Post</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Tabs for Add Question / Create Post -->
        <ul class="nav nav-tabs" id="addPostTab" role="tablist">
          <li class="nav-item" role="presentation">
           <button class="nav-link custom-tab-button" id="create-post-tab" data-bs-toggle="tab" data-bs-target="#create-post" type="button" role="tab" aria-controls="create-post" aria-selected="false">
  Create Post
</button>

          </li>
        </ul>

        <div class="tab-content mt-3" id="addPostTabContent">
          <!-- Create Post Tab -->
          <div class="tab-pane fade" id="create-post" role="tabpanel" aria-labelledby="create-post-tab">
            <form action="/post/create" method="POST" enctype="multipart/form-data" class="p-4 shadow rounded-4">
             

              <!-- Post Content -->
              <div class="mb-4">
                <label for="content" class="form-label fw-semibold">What's on your mind?</label>
                <textarea class="form-control shadow-sm rounded-4" id="content" name="content" rows="4" placeholder="Say something..." required></textarea>
              </div>

              <!-- Image Upload + Submit Button -->
              <div class="row g-3 align-items-end">
                <div class="col-md-8">
                  <label for="image" class="form-label fw-semibold">Attach an image</label>
                  <!-- This remains default to keep "Choose File" white -->
                  <input type="file" class="form-control shadow-sm rounded-3 bg-white text-dark" id="image" name="image" accept="image/*" required>
                </div>
                <div class="col-md-4 text-end">
                  <button type="submit" class="btn custom-post-btn px-4 py-2 rounded-pill shadow-sm">
                    <i class="fas fa-paper-plane me-1"></i> Post
                  </button>
                </div>
              </div>
            </form>
          </div>
        </div>
      </div> <!-- modal-body -->
    </div> <!-- modal-content -->
  </div> <!-- modal-dialog -->
</div> <!-- modal -->

        <!-- Ads/Right Side -->
        <div class="col-md-3 p-4 text-muted">
          <div class="mb-1 text-white background-color: #082541; p-3 rounded">
            Advertisement
                  <img src="/images/1add.PNG" alt="Ad Banner" style="width: 100%; border-radius: 8px;">

          </div>
          <style></style>
          <div class="background-color: #082541; p-3 rounded">Sponsored</div>
                <img src="/images/2add.PNG" alt="Ad Banner" style="width: 100%; border-radius: 8px;">

        </div>
      </div>
    </div>
   
    <script>
      const toggleBtn = document.getElementById("sidebarToggle");
      const sidebar = document.getElementById("sidebarContent");

      if (toggleBtn && sidebar) {
        toggleBtn.addEventListener("click", () => {
          sidebar.classList.toggle("sidebar-collapsed");
        });
      }
    </script>
<!-- like section  -->

    <script>
document.querySelectorAll('.like-btn').forEach(button => {
  const likes = JSON.parse(button.getAttribute('data-likes'));
  const currentUserId = button.getAttribute('data-current-user-id');
  const likeIcon = button.querySelector('.like-icon');
  const likeCountSpan = button.querySelector('.like-count');

  // Set initial state on page load
  likeCountSpan.textContent = likes.length;
  likeIcon.textContent = likes.includes(currentUserId) ? '‚ù§Ô∏è' : '‚ô°';

  button.addEventListener('click', async () => {
    const postId = button.getAttribute('data-post-id');

    // Send like/unlike request
    const res = await fetch(`/post/like/${postId}`, { method: 'POST' });
    if (res.ok) {
      const data = await res.json();  // data.likes array from server

      // Update UI with new data
      likeCountSpan.textContent = data.likes.length;
      if (data.likes.includes(currentUserId)) {
        likeIcon.textContent = '‚ù§Ô∏è';
      } else {
        likeIcon.textContent = '‚ô°';
      }

      // Update data-likes attribute with new likes array (stringify)
      button.setAttribute('data-likes', JSON.stringify(data.likes));
    } else {
      console.error('Like/unlike failed');
    }
  });
});
</script>

  <!-- comments section  -->
    <script>
document.querySelectorAll('.post-container').forEach(postContainer => {
  const toggleBtn = postContainer.querySelector('.comment-toggle-btn');
  const commentSection = postContainer.querySelector('.comment-section');
  const input = commentSection.querySelector('.comment-input');
  const submitBtn = commentSection.querySelector('.comment-submit-btn');
  const cancelBtn = commentSection.querySelector('.comment-cancel-btn');
  const commentsList = commentSection.querySelector('.comments-list');
  const postId = toggleBtn.dataset.postId;

  // Toggle comment section on main "Add a comment" button click
  toggleBtn.addEventListener('click', () => {
    if (commentSection.style.display === 'none' || commentSection.style.display === '') {
      commentSection.style.display = 'block';
      input.focus();
      commentSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
      toggleBtn.style.display = 'none';  // Hide "Add a comment" btn when comment box is open
      cancelBtn.style.display = 'inline-block'; // Show cancel button in comment area
    }
  });

  // Cancel button inside comment section hides the section
  cancelBtn.addEventListener('click', () => {
    commentSection.style.display = 'none';
    input.value = '';
    toggleBtn.style.display = 'inline-flex';  // Show "Add a comment" btn again
    cancelBtn.style.display = 'none';         // Hide cancel button inside comment area
  });

  // Submit new comment via fetch POST
  submitBtn.addEventListener('click', async (e) => {
    e.preventDefault();
    const text = input.value.trim();
    if (!text) {
      alert('Please write a comment');
      return;
    }

    try {
      const res = await fetch(`/post/${postId}/comment`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ text }),
      });

      if (!res.ok) {
        const errorData = await res.json();
        throw new Error(errorData.error || 'Failed to post comment');
      }

      const newComment = await res.json();

      // Create comment <div> element dynamically and append
        console.log('New comment response:', newComment);

      const commentItem = document.createElement('div');
      commentItem.dataset.commentId = newComment._id;
      commentItem.style.marginBottom = '15px';
      commentItem.style.display = 'flex';
      commentItem.style.alignItems = 'flex-start';
      commentItem.innerHTML = `
        <img src="default-user-avatar.png" alt="User" style="width: 32px; height: 32px; border-radius: 50%; margin-right: 10px;">
        <div style="flex: 1;">
          <b style="color: white !important;">${newComment.user.username}</b>
          <div class="comment-text" style="margin-top: 4px; color: white !important;">${newComment.text}</div>
          <button class="edit-comment-btn" style="margin-top: 4px; font-size: 12px; color: #888; background: none; border: none; cursor: pointer;">Edit</button>
        </div>
      `;
      commentsList.appendChild(commentItem);

      // Reset input and keep comment section open
      input.value = '';
      input.focus();

    } catch (error) {
      console.error('Fetch error:', error);
      alert('Failed to submit comment: ' + error.message);
    }
  });
});

</script>
<!-- report section  -->



<script>
document.querySelectorAll('.star-rating').forEach(starContainer => {
  const postId = starContainer.closest('.post-rating').dataset.postId;

  starContainer.addEventListener('click', function (e) {
    if (!e.target.classList.contains('star-icon')) return;

    const selectedRating = parseInt(e.target.dataset.value);

    fetch(`/post/rate/${postId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ rating: selectedRating })
    })
    .then(res => res.json())
    .then(data => {
      const stars = starContainer.querySelectorAll('.star-icon');
      stars.forEach((star, index) => {
        if (index + 1 <= data.averageRating) {
          star.classList.add('filled');
        } else {
          star.classList.remove('filled');
        }
      });

      const ratingText = starContainer.nextElementSibling;
      ratingText.textContent = (`(${data.averageRating.toFixed(1)})`);
    })
    .catch(err => console.error("Rating error:", err));
  });
});

</script>

<!-- delete/report post section  -->
<script>
async function confirmDelete(postId) {
  if (confirm('Are you sure you want to delete this post?')) {
    try {
      const response = await fetch(`/post/delete/${postId}`, {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include'  // important for auth cookie
      });
      const data = await response.json();
      alert(data.message);
      if (response.ok) {
        window.location.reload();
      }
    } catch (err) {
      alert('Error deleting post');
      console.error(err);
    }
  }
}

async function confirmReport(postId) {
  if (confirm('Do you want to report this post?')) {
    try {
      const response = await fetch(`/post/report/${postId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include'  // important for auth cookie
      });
      const data = await response.json();
      alert(data.message);
    } catch (err) {
      alert('Error reporting post');
      console.error(err);
    }
  }
}



const reportModal = new bootstrap.Modal(document.getElementById('reportModal'));

function openReportModal(postId, btn) {
  // Save postId in hidden input
  document.getElementById('reportPostId').value = postId;
  // Clear previous selection
  document.getElementById('reportForm').reset();
  reportModal.show();
  // Store the button element so we can update message later
  reportModal.triggerButton = btn;
}

document.getElementById('reportForm').addEventListener('submit', async function(e) {
  e.preventDefault();
  const postId = document.getElementById('reportPostId').value;
  const reason = this.reason.value;

  try {
    const response = await fetch(`/post/report/${postId}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ reason })
    });
    const data = await response.json();
    alert(data.message);

    if (response.ok) {
      reportModal.hide();

      // Store the reported post and reason in sessionStorage to persist after reload
      let reportedPosts = sessionStorage.getItem('reportedPosts');
      reportedPosts = reportedPosts ? JSON.parse(reportedPosts) : {};
      reportedPosts[postId] = reason;
      sessionStorage.setItem('reportedPosts', JSON.stringify(reportedPosts));

      // Replace post content with the reported message
      const btn = reportModal.triggerButton;
      const postContainer = btn.closest('.post-container');
      if (postContainer) {
        postContainer.innerHTML = `<p style="color: orange; font-weight: bold; padding: 16px;">
          Post reported due to: <em>${reason}</em>
        </p>`;
      }
    }
  } catch (err) {
    alert('Error reporting post');
    console.error(err);
  }
});

// On page load, check sessionStorage for reported posts and replace content accordingly
window.addEventListener('DOMContentLoaded', () => {
  const reportedPosts = sessionStorage.getItem('reportedPosts');
  if (reportedPosts) {
    const reported = JSON.parse(reportedPosts);
    Object.entries(reported).forEach(([postId, reason]) => {
      const postContainer = document.querySelector(`.post-container[data-post-id="${postId}"]`);
      if (postContainer) {
        postContainer.innerHTML = `<p style="color: orange; font-weight: bold; padding: 16px;">
          Post reported due to: <em>${reason}</em>
        </p>`;
      }
    });
  }
});


    </script>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    $.get('/tracking/api/getUserData', function (userInfo) {
      console.log(userInfo);

      if (userInfo?.info) {
        $('#firstName').text(userInfo.info.firstName || 'N/A');
        $('#age').text(userInfo.info.age || 'N/A');
        $('#gender').text(userInfo.info.gender || 'N/A');
      } else if (userInfo) {
        $('#firstName').text(userInfo.firstName || 'N/A');
        $('#age').text(userInfo.age || 'N/A');
        $('#gender').text(userInfo.gender || 'N/A');
        const imageUrl = `/images/${userInfo.image}`;
        $('#userImage').attr('src', imageUrl);
      } else {
        $('#firstName').text('N/A');
        $('#age').text('N/A');
        $('#gender').text('N/A');
      }
    }).fail(function () {
      console.error('Failed to fetch user data.');
    });


    
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>